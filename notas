//*************************************************RANGO DE VALORES PARA TODOS LOS TIPOS */

// ranngo 1 < 119USD es cobro minimo direecto de $300MXN  *

// rango 2 $120 - $475 se multiplica el precio por el 14% *

// rango 3 $476-$3000 se multiplica por el 13% *

// rango 4 > $3000 se multiplica por el 12% *

// *************************************************************************************************************************
// poner una seleccion de pallets , sobres y cajas *


// const volumenM3 = volumenCm3 / 1 000 000;
// const pesoMaximoKg = volumenM3 * 140;
// el precio (largoxanchoxalto/6000)*3  //constante de precio (3)


//determinar si el peso volumétrico es menor o mayor y tomar como base.

//pallets tiene largo y ancho /// altura max de 1.80 m (nota de maximo 1.80)

//*************************************************PALLETS */

// si supera las 500lb es el porcentaje ya calculado + los diez USD y 
// el precio cambia de $375 a $515 USD 

// si es mercancia repetitiva mas de 20 articulos se cobra el 16% de IVA 
// / Si selecciona pallet agregar text box tienes mercancía repetitiva if yes 
// que aparezca cantidad mayo a 20 aumentar el 16%.

//*************************************************CAJAS O SOBRES */

// no exceda de 3 metros de todos los lados

// si selecciono una caja o sobre se le suma el porcentaje con la compra (honorarios)

// mas $3UUSD (por caja) y si son mas de 20 productos de la misma naturaleza 
//se le suma el 16% de IVA

// lb
//lado x alto x ancho /139


// ********************************************************************************

   
// //   <AnimatePresence mode="wait">
//           {showComponent && (

//             <FadeInFromLeft keyId={active} delay={0.2}>
//               <div className="">
//                 <div className="" >
//                   {/* Tarjeta trasera con offset */}
//                   <div className="" />

//                   {/* Tarjeta frontal */}
//                   <div className="contenedor-tarjeta">
//                     <div className="p-5 ">
//                       <div className="grid grid-cols-1 md:grid-cols-2 gap-5 items-start">
//                         {/* Columna de texto/bullets */}

//                         <div className="">
//                           <div>
//                             <AnimatedText
//                               delay={0.2}
//                               lines={[

//                                 <h3 key={1} className="titulo-tarjeta">
//                                   {service.title}
//                                 </h3>
//                               ]}></AnimatedText>
//                           </div>

//                           <div className="">
//                             <div className={["grid gap-4", bulletsCols].join(" ")}>
//                               {service.bullets.map((b, i) => (

//                                 <BulletCard key={i} icon={b.icon} text={b.text} />
//                               ))}
//                             </div>
//                           </div>
//                         </div>




//                       </div>
//                     </div>
//                   </div>
//                 </div>
//               </div>
//             </FadeInFromLeft>
//           )}
//         </AnimatePresence>